name: Auto Build YouTube & Music
on:
  schedule:
    - cron: '0 10 * * *'  # Todos os dias √†s 10:00 UTC
  workflow_dispatch:

# ADICIONE ESTAS PERMISS√ïES
permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      
      - name: Configure build
        run: |
          cat > config.toml << 'EOF'
          enable-magisk-update = true
          parallel-jobs = 1
          
          [YouTube]
          enabled = true
          build-mode = "apk"
          arch = "arm64-v8a"
          version = "auto"
          apkmirror-dlurl = "https://www.apkmirror.com/apk/google-inc/youtube"
          
          [Music]
          enabled = true
          build-mode = "apk"
          arch = "arm64-v8a"
          version = "auto"
          apkmirror-dlurl = "https://www.apkmirror.com/apk/google-inc/youtube-music"
          EOF
      
      - name: Build APKs
        run: |
          chmod +x build.sh
          export JAVA_OPTS="-Xmx2g"
          ./build.sh config.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_VER_CODE: ${{ github.run_number }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Build #${{ github.run_number }} - $(date +'%d/%m/%Y')
          files: build/*.apk
          draft: false
          prerelease: false
          generate_release_notes: false
          body: |
            ## Build Autom√°tico #${{ github.run_number }}
            
            üìÖ Data: ${{ steps.date.outputs.date }}
            üïê Hora: ${{ steps.date.outputs.time }}
            
            ### üì¶ Downloads
            - YouTube ReVanced (ARM64)
            - YouTube Music ReVanced (ARM64)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get date
        id: date
        run: |
          echo "date=$(date +'%d/%m/%Y')" >> $GITHUB_OUTPUT
          echo "time=$(TZ=America/Sao_Paulo date +'%H:%M')" >> $GITHUB_OUTPUT
      
      - name: Telegram Notification
        if: always()
        env:
          TG_TOKEN: ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        continue-on-error: true
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            TAG="v${{ github.run_number }}"
            
            # Lista arquivos gerados
            FILES=""
            for apk in build/*.apk; do
              [ -f "$apk" ] || continue
              filename=$(basename "$apk")
              url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/download/${TAG}/${filename}"
              
              if [[ $filename == *"youtube"* ]] && [[ $filename != *"music"* ]]; then
                FILES+="üì± [YouTube]($url)"$'\n'
              elif [[ $filename == *"music"* ]]; then
                FILES+="üéµ [YouTube Music]($url)"$'\n'
              fi
            done
            
            MSG="#rvcbot"$'\n\n'
            MSG+="‚úÖ *Build #${{ github.run_number }} Conclu√≠do*"$'\n\n'
            MSG+="üìÖ $(date +'%d/%m/%Y - %H:%M')"$'\n\n'
            MSG+="üì• *Downloads:*"$'\n'
            MSG+="$FILES"$'\n'
            MSG+="üîó [Ver Release](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/${TAG})"$'\n\n'
            MSG+="#rvcbot"
          else
            MSG="#rvcbot"$'\n\n'
            MSG+="‚ùå *Falha no Build*"$'\n\n'
            MSG+="üîç [Ver logs](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }})"$'\n\n'
            MSG+="#rvcbot"
          fi
          
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d "chat_id=${TG_CHAT_ID}" \
            -d "text=${MSG}" \
            -d "parse_mode=Markdown"
